# Jedi Knight Cog Script
#
# WEAP_Repeater.COG
#
# WEAPON 6 Script - UGW for SSR 4000 Pro
#
# By ID_Junkguy
#
# 


symbols

model       povModel=rptv.3do                   local
model       invisModel=invis.3do                   local
model       weaponMesh=rptg.3do                 local

keyframe    mountAnim=m4mnt.key               local
keyframe    dismountAnim=dd44dis.key            local
keyframe    povfireAnim=m4shoot.key            local
keyframe    povreloadAnim=m4reload.key       local
keyframe    holsterAnim=kyhlstr.key             local
keyframe    reloadg=reloadkf7.key               local

sound       outSound=clipempty.wav              local
sound       dismountSound=PutWeaponAway01.wav   local

thing       player                              local
thing       victim                              local
thing       potential                           local

flex        dot                                 local
flex        maxDot                              local

flex        fireWait=0.1                        local
flex        holsterWait                         local
flex        fireDelay=0.6                       local
flex        powerBoost                          local
flex        reloading=2.0                       local
flex        random                              local

template     lookghost=+lghost                   local                         
int          error=0                            local                         
int          direction_gun=1                    local   
template    povtemp=+deagletemp       		local 
thing		weaponpov=-1 	            	local
thing		weaplook	            		local

int         channel=-1                        local

int         weaponIndex                         local
int         trackID=-1                          local
int         dummy=0                             local
int         mode                                local
int         holsterTrack                        local
int         ID                                  local
int         isFiring=0                          local
int         isReloading                         local

message     activated
message     deactivated
message     selected
message     deselected
message     autoselect
message     fire
message     timer
message     killed
message     newplayer
message     pulse

material    flash=muzzle.mat                   local   

end

# ========================================================================================

code

fire:
   player = GetSourceRef();

   // Check that the player is still alive.
   if(GetThingHealth(player) <= 0)
   {
    if(isFiring)
    {
       SendTrigger(-1, 60, 1, player, 0, 0);
       isFiring=0;
    }
      Return;
   }

  if(mode == 0)
{
   if(GetInv(player, 118) > 29.0)
    {
     if(isFiring)
     {
        SendTrigger(-1, 60, 1, player, 0, 0);
        isFiring=0;
     }
   PlaySoundThing(outSound, player, 1, -1, -1, 0x80);
      Return;
   }

   // Check Ammo - If we are out, autoselect best weapon.
   if(GetInv(player, 12) < 1.0)
   {
     if(isFiring)
     {
        SendTrigger(-1, 60, 1, player, 0, 0);
        isFiring=0;
     }
     SetInv(player, 118, 0.0);
      PlaySoundThing(outSound, player, 1.0, -1.0, -1.0, 0x80);
      if(GetAutoSwitch() & 1)
         SelectWeapon(player, AutoSelectWeapon(player, 1));
      Return;
   }
 
  if(!isFiring) // If player has ammo and holds fire, then turn on firing if not on
  {
     if(GetInv(player, 12) > 0.0)
     {
       SendTrigger(-1, 60, 0, player, 0, 0);
       isFiring=1;
     }
  }

   ChangeInv(player, 118, 1.0);
   ChangeInv(player, 12, -1.0);
  // jkPlayPOVKey(player, povfireAnim, 1, 0x38);


	StopKey(weaponpov, trackID, 0.0); 
	trackID = PlayKey(weaponpov, povfireAnim, 2, 20); 



//muzzleflash here

}
else
{
   if(GetInv(player, 12) < 1.0)
   {
     if(isFiring)
     {
        SendTrigger(-1, 60, 1, player, 0, 0);
        isFiring=0;
     }
	Print("Out of bullets.");
   }
   else if(GetInv(player, 118) < 1.0)
   {
     if(isFiring)
     {
        SendTrigger(-1, 60, 1, player, 0, 0);
        isFiring=0;
     }
	Print("The clip is full.");
   }
else
   {  
ChangeFireRate(player, reloading);
isReloading=1;
SetTimerEx(reloading, 4, 0.0, 0.0);
    if(isFiring)
    {
       SendTrigger(-1, 60, 1, player, 0, 0);
       isFiring=0;
    }
   SetInv(player, 118, 0.0);


     PlayKey(GetLocalPlayerThing(), reloadg, 2, 32);



//trigger reloadsnd
SendTrigger(-1, 61, player, 0, 0, 0);

     
	StopKey(weaponpov, trackID, 0.0); 
	trackID = PlayKey(weaponpov, povreloadAnim, 3, 20); 
  // jkPlayPOVKey(player, reloadv, 1, 0x38);
   }
}


   Return;

# ........................................................................................

activated:
   player = GetSourceRef();
   mode = GetSenderRef();

if(isReloading) Return;

   jkSetWaggle(player, '0.0 0.0 0.0', 0);
  // powerBoost = GetInv(player, 63);
   ActivateWeapon( player, fireWait, mode );

if(!isFiring)
{
   if((mode==0) && (GetInv(player, 12) > 0.0))
   {
     isFiring=1;
     SendTrigger(-1, 60, 0, player, 0, 0);
   }
}

   Return;

# ........................................................................................

deactivated:
   player = GetSourceRef();
   mode = GetSenderRef();

   SendTrigger(-1, 60, 1, player, 0, 0);
   isFiring=0;

if(GetInv(player, 118) > 29.0)
    {  
ChangeFireRate(player, reloading);
isReloading=1;
SetTimerEx(reloading, 4, 0.0, 0.0);
     SetInv(player, 118, 0.0);


    PlayKey(GetLocalPlayerThing(), reloadg, 2, 32);


	StopKey(weaponpov, trackID, 0.0); 
	trackID = PlayKey(weaponpov, povreloadAnim, 3, 20); 


//trigger reloadsnd
SendTrigger(-1, 61, player, 0, 0, 0);


//    PlaySoundThing(reloadSound, player, 1, -1, -1, 0x80);
//   jkPlayPOVKey(player, reloadv, 1, 0x38);

   }

   jkSetWaggle(player, '10.0 7.0 0.0', 350);
   DeactivateWeapon( player, mode );
   Return;

# ........................................................................................

selected:
   player = GetSourceRef();

   // Setup the meshes and models.
   jkSetPOVModel(player, povModel);
   jkSetWeaponMesh(player, weaponMesh);
   SetArmedMode(player, 1);



   weaponpov=CreateThing(povtemp, player);
   SetThingPos(weaponpov, GetThingPos(player));
   AttachThingToThingEx(weaponpov, player, 0x8);
   SetThingModel(weaponpov, povModel);
	StopKey(weaponpov, trackID, 0.0);
	trackID = PlayKey(weaponpov, mountAnim, 1, 20);
	error=0;
	SetPulse(0.002);
   jkSetPOVModel(player, invisModel);



   // Play mounting sound.
   PlayMode(player, 41);

//trigger mount sound
SendTrigger(-1, 62, player, 0, 0, 0);


   // Play the animation (NOLOOP + UNIQUE + ENDPAUSE).
   // The animation is held at the last frame after it is played.
   trackID = jkPlayPOVKey(player, mountAnim, 0, 0x14);
   jkSetWaggle(player, '10.0 7.0 0.0', 350);

   // Clear saber flags, and allow activation of the weapon
   jkClearFlags(player, 0x5);
   SetCurWeapon(player, 6);
   SetMountWait(player, GetKeyLen(mountAnim));

   Return;

# ........................................................................................

deselected:
   player = GetSourceRef();
   weaponIndex = GetSenderRef();
 
   error=0;
   SetPulse(0);
   if(weaponpov!=-1){
    DestroyThing(weaponpov);
    weaponpov=-1;
   }
  
 if(isFiring)
 {
   SendTrigger(-1, 60, 1, player, 0, 0);
   isFiring=0;
 }

   SetInv(player, 118, 0.0);

   PlaySoundThing(dismountSound, player, 1.0, -1, -1, 0x80);
   jkPlayPOVKey(player, dismountAnim, 0, 0x18);
   
   holsterWait = GetKeyLen(holsterAnim);
   SetMountWait(player, holsterWait);
   holsterTrack = PlayKey(player, holsterAnim, 1, 0x4);
   SetTimerEx(holsterWait, 2, 0.0, 0.0);
   if (trackID != -1)
   {
      jkStopPOVKey(player, trackID, 0);
      trackID = -1;
   }
   jkSetWaggle(player, '0.0 0.0 0.0', 0);

   Return;

# ........................................................................................

autoselect:
   player = GetSourceRef();

   // If the player has the weapon
   if(GetInv(player, 6) != 0.0)
   {
      // If the player has ammo
      if(GetInv(player, 12) != 0.0)
      {
         ReturnEx(500.0);
      }
      else
      {
         ReturnEx(-1.0);
      }
   }
   else
   {
      ReturnEx(-1.0);
   }

   Return;

# .......................................

killed:

if(GetLocalPlayerThing() != GetSenderRef()) Return;

   KillTimerEx(4);
   isReloading=0;

   error=0;
   SetPulse(0);
   if(weaponpov!=-1){
    DestroyThing(weaponpov);
    weaponpov=-1;
   }
  
   SendTrigger(-1, 60, 1, GetSenderRef(), 0, 0);
   isFiring=0;
//   Sleep(0.2);
//   SendTrigger(-1, 60, 1, GetSenderRef(), 0, 0);

Return;

# .......................................

newplayer:

   KillTimerEx(4);
   isReloading=0;

   error=0;
   SetPulse(0);
   if(weaponpov!=-1){
    DestroyThing(weaponpov);
    weaponpov=-1;
   }

 if(isFiring)
 {
   SendTrigger(-1, 60, 1, GetSourceRef(), 0, 0);
   isFiring=0;
 }

Return;

# ........................................................................................

timer:
   if(GetSenderID() == 2) StopKey(player, holsterTrack, 0.0);
   else if(GetSenderID() == 3) SetMaterialCel(flash, 0);
   else if(GetSenderID() == 4) isReloading=0;

   Return;

# ........................................................................................

pulse:

	//Pov code
	if(error == 1)
	{
		if(GetCurWeapon(player) != gunweap)
		{
			error=0;
			SetPulse(0);
			DestroyThing(weaponpov);
		}
	}


   if(GetCurrentCamera() == 0) ClearThingFlags(weaponpov, 0x10);
   else SetThingFlags(weaponpov, 0x10);

   weaplook=FireProjectile(player, lookghost, -1, -1, '0.0 0.0 0.0', '0.0 0.0 0.0', 1.0, 0x20, -1.0, -1.0);
   SetThingLook(weaponpov, GetThingLVec(weaplook));

Return;

end





